imports:
    - { resource: parameters.yml }
    - { resource: security.yml }

framework:
    translator:      { fallback: "%locale%" }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        handler_id:  ~
    fragments:       ~
    http_method_override: true

twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    form:
        resources:
            - 'AttentraWebBundle:Form:fields.html.twig'
    exception_controller: 'FOS\RestBundle\Controller\ExceptionController::showAction'
    globals:
        locales: ['fr', 'en']

assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ "AttentraWebBundle", "AttentraTimeBundle", "AttentraResourceBundle" ]
    filters:
        cssrewrite: ~

doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        entity_managers:
            default:
                auto_mapping: true
#                mappings:
#                    gedmo_translatable:
#                        type: annotation
#                        prefix: Gedmo\Translatable\Entity
#                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translatable/Entity"
#                        alias: GedmoTranslatable # this one is optional and will default to the name set for the mapping
#                        is_bundle: false
#                    gedmo_translator:
#                        type: annotation
#                        prefix: Gedmo\Translator\Entity
#                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translator/Entity"
#                        alias: GedmoTranslator # this one is optional and will default to the name set for the mapping
#                        is_bundle: false
#                    gedmo_loggable:
#                        type: annotation
#                        prefix: Gedmo\Loggable\Entity
#                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Loggable/Entity"
#                        alias: GedmoLoggable # this one is optional and will default to the name set for the mapping
#                        is_bundle: false
#                    gedmo_tree:
#                        type: annotation
#                        prefix: Gedmo\Tree\Entity
#                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Tree/Entity"
#                        alias: GedmoTree # this one is optional and will default to the name set for the mapping
#                        is_bundle: false
                filters:
                    softdeleteable:
                        class: Gedmo\SoftDeleteable\Filter\SoftDeleteableFilter
                        enabled: true


swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }


stof_doctrine_extensions:
    default_locale: %locale%
    orm:
        default:
            timestampable: true
            softdeleteable: true
            uploadable: true


fos_rest:
    param_fetcher_listener: force
    body_listener: true
    allowed_methods_listener: true
    format_listener:
        rules:
            - { path: '^/api/', priorities: [json, xml], fallback_format: json, prefer_extension: true } # Caution : when used from browser without extension, the xml mime type "application/xml" matches and is used
            - { path: '^/', priorities: ['*/*'], fallback_format: false, prefer_extension: true }
    view:
        view_response_listener: force
        force_redirects:
            html: true
        formats:
            json: true
            xml: true
        templating_formats:
            html: true
        mime_types:
            json: ['application/json', 'application/x-json']
            rss: 'application/rss+xml'
            jpg: 'image/jpeg'
            png: 'image/png'
        failed_validation: HTTP_BAD_REQUEST
        jsonp_handler: ~
    exception:
        codes:
            'Symfony\Component\Routing\Exception\ResourceNotFoundException': 404
            'Doctrine\ORM\OptimisticLockException': HTTP_CONFLICT
        messages:
            'Symfony\Component\Security\Core\Exception\AuthenticationException': true
    access_denied_listener:
        json: true
    disable_csrf_role: IS_AUTHENTICATED_ANONYMOUSLY
#    disable_csrf_role: ROLE_API

sensio_framework_extra:
    view:    { annotations: false }
    router:  { annotations: true }

nelmio_api_doc: ~

parameters:
  nelmio_api_doc.extractor.api_doc_extractor.class: Attentra\CoreBundle\Extractor\ApiDocExtractor

services:
    attentra_core.api_doc.extractor.generic_rest_parser:
        class: Attentra\CoreBundle\Parser\GenericRestParser
        arguments: [@service_container]
        tags:
            - { name: nelmio_api_doc.extractor.parser, priority: 1 }
